{"ast":null,"code":"import Navbar from\"./components/Navbar.js\";import{BrowserRouter,Route,Routes}from\"react-router-dom\";import TextForm from\"./components/TextForm.js\";import\"./App.css\";import\"bootstrap/dist/css/bootstrap.min.css\";import About from\"./components/About.js\";// import Sidebar from \"./components/Sidebar.js\";\nimport React,{useState}from\"react\";import Alert from\"./components/Alert.js\";// import { radio } from \"@material-tailwind/react\";\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");//whether dark mode enabled or not\nconst[alert,setAlert]=useState(null);const[color,setColor]=useState(\"rgb(31 33 33)\");const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},2000);};//to change the color of darkmode according to radio button\nconst changeColor=()=>{if(mode===\"dark\"){const radioBtn=document.querySelectorAll('input[name=\"flexRadioDefault\"]');for(const radio of radioBtn){if(radio.checked){document.body.style.backgroundColor=`${radio.style.backgroundColor}`;const radioColor=`${radio.style.backgroundColor}`;setColor(radioColor);}}}};//\nconst toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");//Dynamically adding title\n// setInterval(() => {\n//   document.title = \"Alert!!!\";\n// }, 1000);\n// setInterval(() => {\n//   document.title = \"Text Buddy - Home\";\n// }, 2000);\nconst radioBtn=document.querySelectorAll('input[name=\"flexRadioDefault\"]');// console.log(radioBtn);\nfor(const radio of radioBtn){if(radio.checked){document.body.style.backgroundColor=`${radio.style.backgroundColor}`;const radioColor=`${radio.style.backgroundColor}`;setColor(radioColor);}}showAlert(\"! Dark Mode has been enabled \",\"success\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"! Light Mode has been enabled \",\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(BrowserRouter,{future:{v7_startTransition:true,v7_relativeSplatPath:true},children:[/*#__PURE__*/_jsx(Navbar,{logo:\"TextBuddy\",aboutText:\"About TextBuddy\",mode:mode,toggleMode:toggleMode,changeColor:changeColor,color:color}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",element:/*#__PURE__*/_jsx(About,{color:color,mode:mode})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze\",mode:mode,showAlert:showAlert,color:color})})]})]})]})});}export default App;","map":{"version":3,"names":["Navbar","BrowserRouter","Route","Routes","TextForm","About","React","useState","Alert","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","color","setColor","showAlert","message","type","msg","setTimeout","changeColor","radioBtn","document","querySelectorAll","radio","checked","body","style","backgroundColor","radioColor","toggleMode","children","future","v7_startTransition","v7_relativeSplatPath","logo","aboutText","className","exact","path","element","heading"],"sources":["C:/React App/textutils/src/App.js"],"sourcesContent":["import Navbar from \"./components/Navbar.js\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport TextForm from \"./components/TextForm.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport About from \"./components/About.js\";\n// import Sidebar from \"./components/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert.js\";\n// import { radio } from \"@material-tailwind/react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode enabled or not\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState(\"rgb(31 33 33)\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  //to change the color of darkmode according to radio button\n  const changeColor = () => {\n    if (mode === \"dark\") {\n      const radioBtn = document.querySelectorAll(\n        'input[name=\"flexRadioDefault\"]'\n      );\n      for (const radio of radioBtn) {\n        if (radio.checked) {\n          document.body.style.backgroundColor = `${radio.style.backgroundColor}`;\n          const radioColor = `${radio.style.backgroundColor}`;\n          setColor(radioColor);\n        }\n      }\n    }\n  };\n  //\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      //Dynamically adding title\n      // setInterval(() => {\n      //   document.title = \"Alert!!!\";\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = \"Text Buddy - Home\";\n      // }, 2000);\n      const radioBtn = document.querySelectorAll(\n        'input[name=\"flexRadioDefault\"]'\n      );\n      // console.log(radioBtn);\n      for (const radio of radioBtn) {\n        if (radio.checked) {\n          document.body.style.backgroundColor = `${radio.style.backgroundColor}`;\n          const radioColor = `${radio.style.backgroundColor}`;\n          setColor(radioColor);\n        }\n      }\n\n      showAlert(\"! Dark Mode has been enabled \", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"! Light Mode has been enabled \", \"success\");\n    }\n  };\n  return (\n    <>\n      {/*Here logo and aboutText are the props given to the component navbar as an arguments */}\n      <BrowserRouter future={{ v7_startTransition: true, v7_relativeSplatPath: true}} >\n      {/* {{ v7_startTransition: true, v7_relativeSplatPath: true}} This is the new feature of router v6 transitioning to v7*/}\n        <Navbar\n          logo=\"TextBuddy\"\n          aboutText=\"About TextBuddy\"\n          mode={mode}\n          toggleMode={toggleMode}\n          changeColor={changeColor}\n          color={color}\n        />\n        <div className=\"container\">\n          <Alert alert = {alert}/>\n          <Routes>\n            <Route exact path=\"/about\" element = {<About color={color} mode={mode}/>} >\n            </Route>\n            <Route exact path=\"/\" element = {\n              <TextForm\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n                color={color}\n              />} > \n            </Route>\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}