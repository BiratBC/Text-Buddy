{"ast":null,"code":"var _jsxFileName = \"C:\\\\React App\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./components/Navbar.js\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport TextForm from \"./components/TextForm.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport About from \"./components/About.js\";\n// import Sidebar from \"./components/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert.js\";\n// import { radio } from \"@material-tailwind/react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); //whether dark mode enabled or not\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState(\"rgb(31 33 33)\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  //to change the color of darkmode according to radio button\n  const changeColor = () => {\n    if (mode === \"dark\") {\n      const radioBtn = document.querySelectorAll('input[name=\"flexRadioDefault\"]');\n      for (const radio of radioBtn) {\n        if (radio.checked) {\n          document.body.style.backgroundColor = `${radio.style.backgroundColor}`;\n          const radioColor = `${radio.style.backgroundColor}`;\n          setColor(radioColor);\n        }\n      }\n    }\n  };\n  //\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      //Dynamically adding title\n      // setInterval(() => {\n      //   document.title = \"Alert!!!\";\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = \"Text Buddy - Home\";\n      // }, 2000);\n      const radioBtn = document.querySelectorAll('input[name=\"flexRadioDefault\"]');\n      // console.log(radioBtn);\n      for (const radio of radioBtn) {\n        if (radio.checked) {\n          document.body.style.backgroundColor = `${radio.style.backgroundColor}`;\n          const radioColor = `${radio.style.backgroundColor}`;\n          setColor(radioColor);\n        }\n      }\n      showAlert(\"! Dark Mode has been enabled \", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"! Light Mode has been enabled \", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        logo: \"TextBuddy\",\n        aboutText: \"About TextBuddy\",\n        mode: mode,\n        toggleMode: toggleMode,\n        changeColor: changeColor,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              alert: alert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter the text to analyze\",\n              mode: mode,\n              showAlert: showAlert,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"ibc8b4d0HeTuDzevCKcrh5x4qu4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","BrowserRouter","Route","Routes","TextForm","About","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","color","setColor","showAlert","message","type","msg","setTimeout","changeColor","radioBtn","document","querySelectorAll","radio","checked","body","style","backgroundColor","radioColor","toggleMode","children","logo","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","Switch","path","heading","_c","$RefreshReg$"],"sources":["C:/React App/textutils/src/App.js"],"sourcesContent":["import Navbar from \"./components/Navbar.js\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport TextForm from \"./components/TextForm.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport About from \"./components/About.js\";\n// import Sidebar from \"./components/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert.js\";\n// import { radio } from \"@material-tailwind/react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mode enabled or not\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState(\"rgb(31 33 33)\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  //to change the color of darkmode according to radio button\n  const changeColor = () => {\n    if (mode === \"dark\") {\n      const radioBtn = document.querySelectorAll(\n        'input[name=\"flexRadioDefault\"]'\n      );\n      for (const radio of radioBtn) {\n        if (radio.checked) {\n          document.body.style.backgroundColor = `${radio.style.backgroundColor}`;\n          const radioColor = `${radio.style.backgroundColor}`;\n          setColor(radioColor);\n        }\n      }\n    }\n  };\n  //\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      //Dynamically adding title\n      // setInterval(() => {\n      //   document.title = \"Alert!!!\";\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = \"Text Buddy - Home\";\n      // }, 2000);\n      const radioBtn = document.querySelectorAll(\n        'input[name=\"flexRadioDefault\"]'\n      );\n      // console.log(radioBtn);\n      for (const radio of radioBtn) {\n        if (radio.checked) {\n          document.body.style.backgroundColor = `${radio.style.backgroundColor}`;\n          const radioColor = `${radio.style.backgroundColor}`;\n          setColor(radioColor);\n        }\n      }\n\n      showAlert(\"! Dark Mode has been enabled \", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"! Light Mode has been enabled \", \"success\");\n    }\n  };\n  return (\n    <>\n      {/*Here logo and aboutText are the props given to the component navbar as an arguments */}\n      <BrowserRouter>\n        <Navbar\n          logo=\"TextBuddy\"\n          aboutText=\"About TextBuddy\"\n          mode={mode}\n          toggleMode={toggleMode}\n          changeColor={changeColor}\n          color={color}\n        />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\">\n              <Alert alert={alert} />\n              <TextForm\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n                color={color}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}